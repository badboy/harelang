// License: MPL-2.0
// (c) 2021 Alexey Yerin <yyp@disroot.org>

@symbol("__test_main") fn test_main() size;

export fn init() void = void;

const @symbol("__fini_array_start") fini_start: [*]*fn() void;
const @symbol("__fini_array_end") fini_end: [*]*fn() void;

// Run all global finalization functions.
export fn fini() void = {
	const nfini = (&fini_end: uintptr - &fini_start: uintptr): size
		/ size(*fn() void);
	for (let i = 0z; i < nfini; i += 1) {
		fini_start[i]();
	};
};

export @symbol("main") fn main() int = {
	const nfail = test_main();
	return if (nfail > 0) 1 else 0;
};
